<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
<!--  配置整合mybatis的过程-->
<!--    配置数据库相关参数-->
    <context:property-placeholder location="classpath:jdbc.properties"/>

<!--    数据库连接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
<!--        配置连接池属性-->
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

<!--    3. 配置SqlSessionFactory对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
<!--        注入数据库连接池-->
        <property name="dataSource" ref="dataSource"/>
<!--        配置myBatis全局配置文件 mybatis-config.xml-->
<!--        classpath: resource下面和java下面的目录-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
<!--        扫描entity包 使用别名-->
        <property name="typeAliasesPackage" value="com.tommy.entity"/>
<!--        扫描sql配置文件 mapper需要的xml 文件-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

<!--    4. 配置扫描dao接口的包 动态实现dao接口  注入到spring容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--属性注入sqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
<!--        给出扫描dao接口的包-->
        <property name="basePackage" value="com.tommy.dao"/>
    </bean>


</beans>